{"ast":null,"code":"var _jsxFileName = \"/Users/dengjiaming/INFO442-Chatbot/src/components/MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, StandaloneSearchBox, InfoWindow } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst center = {\n  lat: 37.7749,\n  // Default to San Francisco\n  lng: -122.4194\n};\nconst libraries = [\"places\"];\nconst MapPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const searchBoxRef = useRef(null);\n  const onLoad = useCallback(map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const onPlacesChanged = () => {\n    const places = searchBoxRef.current.getPlaces();\n    if (!places || places.length === 0) {\n      alert(\"Please select an option from the dropdown.\");\n      return; // Exit if no places found or not selected from dropdown\n    }\n    if (!map) {\n      console.error(\"Map not loaded\");\n      alert(\"Map is not loaded yet. Please wait and try again.\");\n      return;\n    }\n    const bounds = new window.google.maps.LatLngBounds();\n    let searchLocation;\n    places.forEach(place => {\n      if (!place.geometry || !place.geometry.location) {\n        console.error(\"Place has no location data.\");\n        return;\n      }\n      if (place.geometry.viewport) {\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n      searchLocation = place.geometry.location;\n    });\n    map.fitBounds(bounds);\n    if (searchLocation) {\n      searchNearby(searchLocation);\n    }\n  };\n  const searchNearby = location => {\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: location,\n      radius: '5000',\n      // Search within 5000 meters\n      type: ['veterinary_care'] // Search for veterinary care locations\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n        const newMarkers = results.map(place => ({\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n          name: place.name\n        }));\n        setMarkers(newMarkers);\n      } else {\n        alert(\"No pet hospitals found near this location.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDqwuHkEqBr5LnJiKrmd_ATYmXnph-LeX0\" // Replace with your actual Google Maps API key\n    ,\n    libraries: libraries,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: [/*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n        onLoad: ref => searchBoxRef.current = ref,\n        onPlacesChanged: onPlacesChanged,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter zip code or address\",\n          style: {\n            boxSizing: 'border-box',\n            border: '1px solid transparent',\n            width: '240px',\n            height: '32px',\n            padding: '0 12px',\n            borderRadius: '3px',\n            boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)',\n            fontSize: '14px',\n            outline: 'none',\n            textOverflow: 'ellipses',\n            position: 'absolute',\n            left: '50%',\n            marginLeft: '-120px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        onClick: () => setSelected(marker),\n        children: selected === marker ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n          onCloseClick: () => setSelected(null),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: marker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this) : null\n      }, marker.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"4hpQT0uSTv4huYL/mIwoC0cqMRw=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useCallback","useRef","GoogleMap","LoadScript","Marker","StandaloneSearchBox","InfoWindow","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","libraries","MapPage","_s","map","setMap","markers","setMarkers","selected","setSelected","searchBoxRef","onLoad","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","onPlacesChanged","places","current","getPlaces","length","alert","console","error","searchLocation","forEach","place","geometry","location","viewport","union","extend","searchNearby","service","PlacesService","request","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","newMarkers","name","googleMapsApiKey","children","mapContainerStyle","zoom","ref","placeholder","style","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","marker","onClick","onCloseClick","_c","$RefreshReg$"],"sources":["/Users/dengjiaming/INFO442-Chatbot/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker, StandaloneSearchBox, InfoWindow } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\n\nconst center = {\n  lat: 37.7749, // Default to San Francisco\n  lng: -122.4194\n};\n\nconst libraries = [\"places\"];\n\nconst MapPage = () => {\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const searchBoxRef = useRef(null);\n\n  const onLoad = useCallback(map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n\n  const onPlacesChanged = () => {\n    const places = searchBoxRef.current.getPlaces();\n\n    if (!places || places.length === 0) {\n      alert(\"Please select an option from the dropdown.\");\n      return; // Exit if no places found or not selected from dropdown\n    }\n\n    if (!map) {\n      console.error(\"Map not loaded\");\n      alert(\"Map is not loaded yet. Please wait and try again.\");\n      return;\n    }\n\n    const bounds = new window.google.maps.LatLngBounds();\n    let searchLocation;\n\n    places.forEach(place => {\n      if (!place.geometry || !place.geometry.location) {\n        console.error(\"Place has no location data.\");\n        return;\n      }\n\n      if (place.geometry.viewport) {\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n\n      searchLocation = place.geometry.location;\n    });\n\n    map.fitBounds(bounds);\n    if (searchLocation) {\n      searchNearby(searchLocation);\n    }\n  };\n\n  const searchNearby = (location) => {\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: location,\n      radius: '5000', // Search within 5000 meters\n      type: ['veterinary_care'] // Search for veterinary care locations\n    };\n\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n        const newMarkers = results.map(place => ({\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n          name: place.name\n        }));\n        setMarkers(newMarkers);\n      } else {\n        alert(\"No pet hospitals found near this location.\");\n      }\n    });\n  };\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"AIzaSyDqwuHkEqBr5LnJiKrmd_ATYmXnph-LeX0\" // Replace with your actual Google Maps API key\n      libraries={libraries}\n    >\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        <StandaloneSearchBox\n          onLoad={ref => searchBoxRef.current = ref}\n          onPlacesChanged={onPlacesChanged}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Enter zip code or address\"\n            style={{ boxSizing: 'border-box', border: '1px solid transparent', width: '240px', height: '32px', padding: '0 12px', borderRadius: '3px', boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)', fontSize: '14px', outline: 'none', textOverflow: 'ellipses', position: 'absolute', left: '50%', marginLeft: '-120px' }}\n          />\n        </StandaloneSearchBox>\n        {markers.map(marker => (\n          <Marker key={marker.name} position={{ lat: marker.lat, lng: marker.lng }}\n            onClick={() => setSelected(marker)}\n          >\n            {selected === marker ? (\n              <InfoWindow onCloseClick={() => setSelected(null)}>\n                <div>{marker.name}</div>\n              </InfoWindow>\n            ) : null}\n          </Marker>\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default MapPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}