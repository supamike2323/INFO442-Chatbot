{"ast":null,"code":"var _jsxFileName = \"/Users/dengjiaming/INFO442-Chatbot/src/components/MapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, StandaloneSearchBox, InfoWindow } from '@react-google-maps/api';\nimport \"../css/css.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194\n};\nconst libraries = [\"places\"];\nconst MapPage = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const searchBoxRef = useRef(null);\n  useEffect(() => {\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n  }, []);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n  const onPlacesChanged = () => {\n    const places = searchBoxRef.current.getPlaces();\n    if (!places || places.length === 0) {\n      alert(\"Please select an option from the dropdown.\");\n      return;\n    }\n    if (!map) {\n      console.error(\"Map not loaded\");\n      alert(\"Map is not loaded yet. Please wait and try again.\");\n      return;\n    }\n    const bounds = new window.google.maps.LatLngBounds();\n    let searchLocation;\n    places.forEach(place => {\n      if (!place.geometry || !place.geometry.location) {\n        console.error(\"Place has no location data.\");\n        return;\n      }\n      if (place.geometry.viewport) {\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n      searchLocation = place.geometry.location;\n    });\n    map.fitBounds(bounds);\n    if (searchLocation) {\n      searchNearby(searchLocation);\n    }\n  };\n  const searchNearby = location => {\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: location,\n      radius: '5000',\n      type: ['veterinary_care']\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n        const newMarkers = results.map(place => ({\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n          name: place.name\n        }));\n        setMarkers(newMarkers);\n      } else {\n        alert(\"No pet hospitals found near this location.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mapTitle\",\n      children: \"Google API Map for Searching Available Pet Clinics Near You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mapDescription\",\n      children: \"Enter your zip code or address in the search box below to find pet clinics near you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries: libraries,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerClassName: \"mapContainer\",\n        center: center,\n        zoom: 10,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        children: [/*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: ref => searchBoxRef.current = ref,\n          onPlacesChanged: onPlacesChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"mapInput\",\n            type: \"text\",\n            placeholder: \"Enter zip code or address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          onClick: () => setSelected(marker),\n          children: selected === marker ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: () => setSelected(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: marker.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this) : null\n        }, marker.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(MapPage, \"6D1WBQDqeA++R+7Q7JU5foDf9uE=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","GoogleMap","LoadScript","Marker","StandaloneSearchBox","InfoWindow","jsxDEV","_jsxDEV","Fragment","_Fragment","center","lat","lng","libraries","MapPage","_s","map","setMap","markers","setMarkers","selected","setSelected","searchBoxRef","window","location","hash","reload","onLoad","onUnmount","onPlacesChanged","places","current","getPlaces","length","alert","console","error","bounds","google","maps","LatLngBounds","searchLocation","forEach","place","geometry","viewport","union","extend","fitBounds","searchNearby","service","PlacesService","request","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","newMarkers","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerClassName","zoom","ref","placeholder","marker","position","onClick","onCloseClick","_c","$RefreshReg$"],"sources":["/Users/dengjiaming/INFO442-Chatbot/src/components/MapPage.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, StandaloneSearchBox, InfoWindow } from '@react-google-maps/api';\nimport \"../css/css.css\"\n\nconst center = {\n  lat: 37.7749,\n  lng: -122.4194\n};\n\nconst libraries = [\"places\"];\n\nconst MapPage = () => {\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const searchBoxRef = useRef(null);\n\n  useEffect(() => {\n    if (!window.location.hash) {\n      window.location = window.location + '#loaded';\n      window.location.reload();\n    }\n  }, []);\n\n  const onLoad = useCallback((map) => {\n    setMap(map);\n  }, []);\n\n  const onUnmount = useCallback(() => {\n    setMap(null);\n  }, []);\n\n  const onPlacesChanged = () => {\n    const places = searchBoxRef.current.getPlaces();\n    if (!places || places.length === 0) {\n      alert(\"Please select an option from the dropdown.\");\n      return;\n    }\n    if (!map) {\n      console.error(\"Map not loaded\");\n      alert(\"Map is not loaded yet. Please wait and try again.\");\n      return;\n    }\n    const bounds = new window.google.maps.LatLngBounds();\n    let searchLocation;\n    places.forEach(place => {\n      if (!place.geometry || !place.geometry.location) {\n        console.error(\"Place has no location data.\");\n        return;\n      }\n      if (place.geometry.viewport) {\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n      searchLocation = place.geometry.location;\n    });\n    map.fitBounds(bounds);\n    if (searchLocation) {\n      searchNearby(searchLocation);\n    }\n  };\n\n  const searchNearby = (location) => {\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location: location,\n      radius: '5000',\n      type: ['veterinary_care']\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK && results) {\n        const newMarkers = results.map(place => ({\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n          name: place.name\n        }));\n        setMarkers(newMarkers);\n      } else {\n        alert(\"No pet hospitals found near this location.\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"mapTitle\">Google API Map for Searching Available Pet Clinics Near You</h2>\n      <p className=\"mapDescription\">Enter your zip code or address in the search box below to find pet clinics near you.</p>\n      <LoadScript\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\n        libraries={libraries}\n      >\n        <GoogleMap\n          mapContainerClassName=\"mapContainer\"\n          center={center}\n          zoom={10}\n          onLoad={onLoad}\n          onUnmount={onUnmount}\n        >\n          <StandaloneSearchBox\n            onLoad={ref => searchBoxRef.current = ref}\n            onPlacesChanged={onPlacesChanged}\n          >\n            <input\n              className=\"mapInput\"\n              type=\"text\"\n              placeholder=\"Enter zip code or address\"\n            />\n          </StandaloneSearchBox>\n          {markers.map(marker => (\n            <Marker key={marker.name} position={{ lat: marker.lat, lng: marker.lng }}\n              onClick={() => setSelected(marker)}\n            >\n              {selected === marker ? (\n                <InfoWindow onCloseClick={() => setSelected(null)}>\n                  <div>{marker.name}</div>\n                </InfoWindow>\n              ) : null}\n            </Marker>\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    </>\n  );\n}\n\nexport default MapPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}